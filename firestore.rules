
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if a user has an admin claim
    function isAdmin() {
      // This is a placeholder for a custom claim. You would need to set this
      // claim using the Firebase Admin SDK for it to work.
      return request.auth.token.isAdmin == true;
    }

    // By default, deny all reads and writes to all documents.
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS collection
    // This collection stores public and private profile information for each user.
    match /users/{userId} {
      // A user can read their own profile. Admins can also read any profile.
      allow read: if isOwner(userId) || isAdmin();
      
      // A user can create their own profile document, typically during signup.
      allow create: if isOwner(userId);
      
      // A user can update their own profile. Admins can update any profile.
      allow update: if isOwner(userId) || isAdmin();
      
      // A user can delete their own profile. Admins can also delete any profile.
      allow delete: if isOwner(userId) || isAdmin();

      // Rules for all subcollections under a user document (e.g., vehicles, caravans, trips).
      // This rule grants full access to the user who owns the parent document.
      match /{subcollection}/{docId=**} {
        allow read, write, create, delete: if isOwner(userId);
      }
    }
    
    // OAUTH_STATES collection (used for Google Sign-In to prevent CSRF attacks)
    match /oauthStates/{stateId} {
      // Allow any client (even unauthenticated ones) to create a state document.
      // The state ID is a secure, random, single-use token.
      allow create;
      
      // Only the server (via Admin SDK which bypasses these rules) should read and delete these.
      // We explicitly deny client-side reads and deletes.
      allow read, delete: if false; 
    }
  }
}
