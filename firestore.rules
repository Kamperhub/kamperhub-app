
rules_version = '2';

service cloud.firestore {
  match /databases/kamperhubv2/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for user-specific data
    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Rules for public contact form submissions
    match /contactSubmissions/{submissionId} {
      // Anyone can create (submit) a message.
      allow create;
      
      // Nobody can read, update, or delete from the client-side.
      // This data should only be accessed by admins via the Firebase Console
      // or a secure backend environment.
      allow read, update, delete: if false;
    }
    
    // Rules for Google Auth state tokens used during OAuth flow
    match /oauthStates/{state} {
      // Allow any authenticated user to create a state token for themselves.
      // The document ID is the random 'state' string.
      // We check that the 'userId' in the document being created matches the user's UID.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Only the user who created the state token can read or delete it.
      allow read, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
